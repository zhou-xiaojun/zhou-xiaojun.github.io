{"title":"运行一个简单的Flask","uid":"ea1216a9cc289837d7b990c138bab379","slug":"运行一个简单的Flask","date":"2021-09-25T15:55:49.000Z","updated":"2021-09-25T18:48:03.547Z","comments":true,"path":"api/articles/运行一个简单的Flask.json","keywords":null,"cover":null,"content":"<h2 id=\"Flask程序编写\"><a href=\"#Flask程序编写\" class=\"headerlink\" title=\"Flask程序编写\"></a>Flask程序编写</h2><p><em><strong>老规矩,万物皆可helloworld!</strong></em></p>\n<p><em>创建helloworld.py文件</em></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 导入Flask类\nfrom flask import Flask\n\n# Flask类接收一个参数__name__\napp &#x3D; Flask(__name__)\n\n# 装饰器的作用是将路由映射到视图函数index\n@app.route(&#39;&#x2F;&#39;)\ndef index():\n    return &#39;Hello World&#39;\n\n# Flask应用程序实例的run方法启动WEB服务器\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    app.run()</code></pre>\n\n<hr>\n<h3 id=\"启动运行\"><a href=\"#启动运行\" class=\"headerlink\" title=\"启动运行\"></a>启动运行</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">python helloworld.py</code></pre>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p><em>如果使用pychram运行.像正常运行普通的python程序一样即可</em></p>\n<p><em>到这里,已经完成了一个最简单的flask程序</em></p>\n\n</div>\n<hr>\n<h3 id=\"参数说明\"><a href=\"#参数说明\" class=\"headerlink\" title=\"参数说明\"></a>参数说明</h3><h4 id=\"Flask对象初始化参数\"><a href=\"#Flask对象初始化参数\" class=\"headerlink\" title=\"Flask对象初始化参数\"></a>Flask对象初始化参数</h4><p>Flask程序实力实例在创建的时候,需要默认传入当前Flask程序所指定的包(模块),接下来就来详细查看一下Flask应用程序在创建的时候一些需要我们关注的参数:</p>\n<ul>\n<li>Import_name<ul>\n<li>Flask程序所在的包(模块),传<code>_name_</code>就可以</li>\n<li>这个参数可以决定Flask在访问静态文件时查找的路径</li>\n</ul>\n</li>\n<li>static_url_path<ul>\n<li>静态文件访问路径,可以不传,默认为：<code>/ + static_folder</code></li>\n</ul>\n</li>\n<li>static_folder<ul>\n<li>静态文件存储的文件夹,可以不传,默认为 <code>static</code></li>\n</ul>\n</li>\n<li>template_folder<ul>\n<li>模板文件存储的文件夹,可以不传,默认为 <code>templates</code></li>\n</ul>\n</li>\n</ul>\n<p><strong>默认参数情况下</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">app &#x3D; Flask(__name__)</code></pre>\n\n<p>文件目录</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">----\n  |---static\n  |     |--- 1.png\n  |---helloworld.py</code></pre>\n\n<p><strong>修改参数的情况下</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">app &#x3D; Flask(__name__, static_url_path&#x3D;&#39;&#x2F;url_path_param&#39;, static_folder&#x3D;&#39;folder_param&#39;)</code></pre>\n\n<p>文件目录</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">----\n  |---folder_param     # 此处目录名变化\n  |     |--- 1.png\n  |---helloworld.py</code></pre>\n\n<p>访问<code>127.0.0.1:5000/url_path_param/1.png</code>才可以访问到图片</p>\n<hr>\n<h4 id=\"应用程序配置参数\"><a href=\"#应用程序配置参数\" class=\"headerlink\" title=\"应用程序配置参数\"></a>应用程序配置参数</h4><p>对于Flask对象初始化参数仅仅设置的是Flask本身的属性,比如:</p>\n<ul>\n<li>Flask从哪里读取静态文件</li>\n<li>Flask从哪里读取模板文件</li>\n<li>等等…</li>\n</ul>\n<p>应用程序配置参数设置的是一个Web应用工程的相关信息,比如:</p>\n<ul>\n<li>数据库的连接信息</li>\n<li>日志的配置信息</li>\n<li>自定义的配置信息(第三方插件,或者关于配置的常量变量)</li>\n<li>等等…</li>\n</ul>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p><p><em>作用就是集中管理项目的所有配置信息(敏感的配置信息建议单独从env环境变量中导入)</em></p>\n</p>\n</div>\n<h5 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h5><p>Django将所有的配置信息都放到了settings.py文件中,而Flask就不一样.</p>\n<p><strong>Flask将配置信息保存到了app.conifg属性中,该属性可以按照字典类型进行操作</strong></p>\n<h6 id=\"读取\"><a href=\"#读取\" class=\"headerlink\" title=\"读取\"></a>读取</h6><ul>\n<li><code>app.config.get(name)</code></li>\n<li><code>app.config[name]</code></li>\n</ul>\n<h6 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h6><p>主要使用一下三种方式</p>\n<ul>\n<li><p>从配置对象中加载</p>\n<p><code>app.config.from_object(配置对象)</code></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class DefaultConfig(object):\n    &quot;&quot;&quot;默认配置&quot;&quot;&quot;\n    SECRET_KEY &#x3D; &#39;秘钥&#39;\n\napp &#x3D; Flask(__name__)\n\napp.config.from_object(DefaultConfig)\n\n@app.route(&quot;&#x2F;&quot;)\ndef index():\n    print(app.config[&#39;SECRET_KEY&#39;])\n    return &quot;hello world&quot;</code></pre>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p><em>这里的命名是约定俗称的,都是按照环境来命名,你可以选择按照你自己喜欢的方式来命名,但是建议最好不要</em></p>\n<p>如果后面无论是开发环境,测试环境,生成环境都需要用到同一个配置参数.</p>\n<p>你可以继承</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class DevelopmentConfig(DefaultConfig):\n    DEBUG&#x3D;True</code></pre>\n\n\n</div>\n</li>\n<li><p>从配置文件中加载</p>\n<p><code>app.config.from_pyfile(配置文件)</code></p>\n<p>新建一个配置文件setting.py(命名最好可以区分开来这个是那个环境的配置文件)</p>\n<p>在Flask程序文件中</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">app &#x3D; Flask(__name__)\n\napp.config.from_pyfile(&#39;setting.py&#39;)\n\n@app.route(&quot;&#x2F;&quot;)\ndef index():\n    print(app.config[&#39;SECRET_KEY&#39;])\n    return &quot;hello world&quot;</code></pre>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p><p>在项目中使用固定的配置文件</p>\n</p>\n</div>\n</li>\n<li><p>从环境变量中加载</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p><strong>环境变量</strong>(environment variables)一般是指在操作系统中用来指定操作系统运行<strong>环境</strong>的一些参数,如:临时文件夹位置和系统文件夹位置等. <strong>环境变量</strong>是在操作系统中一个具有特定名字的对象,它包含了一个或者多个应用程序所将使用到的信息.</p>\n\n</div>\n<p>通俗的理解,环境变量就是我们设置在操作系统中,由操作系统代为保存的变量值</p>\n<p>在Linux系统中设置和读取配置环境变量的方法如下:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">export 变量名&#x3D;变量值  # 设置\necho $变量名  # 读取\n\n# 例如\nexport ILOVE&#x3D;python\necho $ILOVE</code></pre>\n\n<p><strong>Flask使用环境变量加载配置的本质是通过环境变量值找到配置文件</strong>,再读取配置文件的信息,其使用方式为</p>\n<p><code>app.config.from_envvar(&#39;环境变量名&#39;)</code></p>\n<p>环境变量的值为配置文件的绝对路径</p>\n<p>先在终端中执行如下命令</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">export PROJECT_SETTING&#x3D;&#39;~&#x2F;setting.py&#39;</code></pre>\n\n<p>再运行如下代码</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">app &#x3D; Flask(__name__)\n\napp.config.from_envvar(&#39;PROJECT_SETTING&#39;, silent&#x3D;True)\n\n@app.route(&quot;&#x2F;&quot;)\ndef index():\n    print(app.config[&#39;SECRET_KEY&#39;])\n    return &quot;hello world&quot;</code></pre>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p><p>关于<code>silent</code>的说明:</p>\n<p>表示系统环境变量中没有设置相应值时是否抛出异常</p>\n<p><strong>False表示不安静处理,没有值时报错通知,默认为False</strong></p>\n<p><strong>True表示安静处理,即使没有值也让Flask正常的运行下去</strong></p>\n<p>主要的应用场景:</p>\n<p><strong>配置文件的地址不确定</strong></p>\n<p><strong>在代码中不想暴露真实的配置文件地址,只在运行代码的服务器上才有真实配置文件的信息.</strong></p>\n</p>\n</div>\n</li>\n</ul>\n<h4 id=\"项目中的常用方式\"><a href=\"#项目中的常用方式\" class=\"headerlink\" title=\"项目中的常用方式\"></a>项目中的常用方式</h4><p>使用工厂模式创建Flask app,并结合使用配置对象与环境变量加载配置</p>\n<ul>\n<li>使用配置对象加载默认配置</li>\n<li>使用环境变量加载不想出现在代码中的敏感配置信息</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">def create_flask_app(config):\n    &quot;&quot;&quot;\n    创建Flask应用\n    :param config: 配置对象\n    :return: Flask应用\n    &quot;&quot;&quot;\n    app &#x3D; Flask(__name__)\n    app.config.from_object(config)\n\n    app.config.from_envvar(&quot;PROJECT_SETTING&quot;, silent&#x3D;True)\n    return app\n\nclass DefaultConfig(object):\n    &quot;&quot;&quot;默认配置&quot;&quot;&quot;\n    SECRET_KEY &#x3D; &#39;秘钥&#39;\n\nclass DevelopmentConfig(DefaultConfig):\n    DEBUG&#x3D;True\n\n# app &#x3D; create_flask_app(DefaultConfig)\napp &#x3D; create_flask_app(DevelopmentConfig)\n\n@app.route(&quot;&#x2F;&quot;)\ndef index():\n    print(app.config[&#39;SECRET_KEY&#39;])\n    return &quot;hello world&quot;</code></pre>\n\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p><strong>从环境变量指向的配置文件中读取的配置信息会覆盖掉从配置对象中加载的同名参数</strong></p>\n\n</div>\n<h4 id=\"app-run参数\"><a href=\"#app-run参数\" class=\"headerlink\" title=\"app.run参数\"></a>app.run参数</h4><p>可以指定运行的主机IP地址,端口,是否开启调试模式</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">app.run(host&#x3D;&quot;0.0.0.0&quot;, port&#x3D;5000, debug &#x3D; True)</code></pre>\n\n<p>关于DEBUG调试模式</p>\n<ol>\n<li>程序代码修改后可以自动重启服务器</li>\n<li>在服务器出现相关错误的时候可以直接将错误信息返回到前端进行展示</li>\n</ol>\n<hr>\n<h2 id=\"关于开发服务器的启动方式\"><a href=\"#关于开发服务器的启动方式\" class=\"headerlink\" title=\"关于开发服务器的启动方式\"></a>关于开发服务器的启动方式</h2><p>在1.0版本之后，Flask调整了开发服务器的启动方式，由代码编写<code>app.run()</code>语句调整为命令<code>flask run</code>启动。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from flask import Flask\n\napp &#x3D; Flask(__name__)\n\n@app.route(&#39;&#x2F;&#39;)\ndef index():\n    return &#39;Hello World&#39;\n\n# 程序中不用再写app.run()</code></pre>\n\n<h3 id=\"终端启动\"><a href=\"#终端启动\" class=\"headerlink\" title=\"终端启动\"></a>终端启动</h3><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ export FLASK_APP&#x3D;helloworld\n$ flask run\n * Running on http:&#x2F;&#x2F;127.0.0.1:5000&#x2F;</code></pre>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p><ul>\n<li><p>环境变量 FLASK_APP 指明flask的启动实例</p>\n</li>\n<li><p><code>flask run -h 0.0.0.0 -p 5000</code> 绑定地址 端口</p>\n</li>\n<li><p><code>flask run --help</code>获取帮助</p>\n</li>\n<li><p>生产模式与开发模式的控制</p>\n<p>通过<code>FLASK_ENV</code>环境变量指明</p>\n<ul>\n<li><code>export FLASK_ENV=production</code> 运行在生产模式,未指明则默认为此方式</li>\n<li><code>export FLASK_ENV=development</code>运行在开发模式</li>\n</ul>\n</li>\n</ul>\n<p><em>扩展</em></p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ export FLASK_APP&#x3D;helloworld\n$ python -m flask run\n * Running on http:&#x2F;&#x2F;127.0.0.1:5000&#x2F;</code></pre>\n\n</p>\n</div>\n<hr>\n","text":"Flask程序编写老规矩,万物皆可helloworld! 创建helloworld.py文件 # 导入Flask类 from flask import Flask # Flask类接收一个参数__name__ app &#x3D; Flask(__name__) # 装饰器的作用...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"文章","slug":"文章","count":2,"path":"api/categories/文章.json"}],"tags":[{"name":"flask","slug":"flask","count":2,"path":"api/tags/flask.json"},{"name":"python","slug":"python","count":2,"path":"api/tags/python.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Flask%E7%A8%8B%E5%BA%8F%E7%BC%96%E5%86%99\"><span class=\"toc-text\">Flask程序编写</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%AF%E5%8A%A8%E8%BF%90%E8%A1%8C\"><span class=\"toc-text\">启动运行</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">参数说明</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Flask%E5%AF%B9%E8%B1%A1%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">Flask对象初始化参数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">应用程序配置参数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">使用方式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E8%AF%BB%E5%8F%96\"><span class=\"toc-text\">读取</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">设置</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">项目中的常用方式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#app-run%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">app.run参数</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8E%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E5%90%AF%E5%8A%A8%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">关于开发服务器的启动方式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%88%E7%AB%AF%E5%90%AF%E5%8A%A8\"><span class=\"toc-text\">终端启动</span></a></li></ol></li></ol>","author":{"name":"X","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Think like an artist, develop like an artisan.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{}}